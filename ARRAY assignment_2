Program 1: create an integer array of N elements, you have to check for invalid size, for invalid size prompt user to reenter size and 
           also ask user for elements as an input in arrray and print elements in the array in reverse order

#include <stdio.h>

int main() {
    int size;

    do {
        printf("Enter the size of the array (must be greater than 0): ");
        scanf("%d", &size);
        if (size <= 0) {
            printf("Invalid size. Please enter a positive integer.\n");
        }
    } while (size <= 0);

    int array[size];
    printf("Enter %d elements for the array:\n", size);
    for (int i = 0; i < size; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &array[i]);
    }

    printf("Array elements in reverse order:\n");
    for (int i = size - 1; i >= 0; i--) {
        printf("%d ", array[i]);
    }
    printf("\n");

    return 0;
}
----------------------------------------------------------------------------------------------------------
Program 2: create an array of size N where you have to store characters and print their ASCII value of given charcater input

#include <stdio.h>

int main() {
    int size;

    do {
        printf("Enter the size of the array: ");
        scanf("%d", &size);
        if (size <= 0) {
            printf("Invalid size. Please enter a positive integer.\n");
        }
    } while (size <= 0);

    char array[size];
    printf("Enter %d characters for the array:\n", size);
    for (int i = 0; i < size; i++) {
        printf("Character %d: ", i + 1);
        scanf(" %c", &array[i]); // The space before %c clears any extra newline character in the buffer
    }

    printf("ASCII values of the entered characters:\n");
    for (int i = 0; i < size; i++) {
        printf("Character: %c, ASCII: %d\n", array[i], array[i]);
    }

    return 0;
}
------------------------------------------------------------------------------------------------------------------------------
Program 3: create array of size N and print the sum of squares of all the elements of the array
#include <stdio.h>

int main() {
    int size;

    do {
        printf("Enter the size of the array: ");
        scanf("%d", &size);
        if (size <= 0) {
            printf("Invalid size.\n");
        }
    } while (size <= 0);

    int array[size];
    printf("Enter %d elements for the array:\n", size);
    for (int i = 0; i < size; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &array[i]);
    }

    int sum_of_squares = 0;
    for (int i = 0; i < size; i++) {
        sum_of_squares += array[i] * array[i];
    }

    printf("Sum of squares of all elements: %d\n", sum_of_squares);

    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------
Program 4: create an integer array where the student's id are being stored by the admin, also make provisions to search the student id and print it's index
#include <stdio.h>

int main() {
    int size;

    do {
        printf("Enter the number of student IDs to store: ");
        scanf("%d", &size);
    } while (size <= 0);

    int studentIDs[size];
    printf("Enter %d student IDs:\n", size);
    for (int i = 0; i < size; i++) {
        scanf("%d", &studentIDs[i]);
    }

    int searchID, found = 0;
    printf("Enter the student ID to search: ");
    scanf("%d", &searchID);

    for (int i = 0; i < size; i++) {
        if (studentIDs[i] == searchID) {
            printf("Student ID %d found at index %d.\n", searchID, i);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Student ID %d not found.\n", searchID);
    }

    return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
Program 5:  Write a program to create an array where the medical officer is storing children's age. 
           If the age is more than 5 print 'age should not be greater than 5', 
           and the age shall not be stored. Ask user for re-entering the data. Print the ages of all children

#include <stdio.h>

int main() {
    int n;
    printf("Enter the number of children: ");
    scanf("%d", &n);

    int ages[n];
    int i = 0, age;

    while (i < n) {
        printf("Enter age of child %d: ", i + 1);
        scanf("%d", &age);

        if (age > 5) {
            printf("Age should not be greater than 5. Please re-enter.\n");
        } else {
            ages[i] = age;
            i++;
        }
    }

    printf("Ages of all children:\n");
    for (int j = 0; j < n; j++) {
        printf("%d ", ages[j]);
    }
    printf("\n");

    return 0;
}
----------------------------------------------------------------------------------------------------------------------
Program 6:  create an array of heights of students where you have to check for the height must not be greater than 6 ft and must not be less than 5.5 ft. Store the appropriate heights and print it

#include <stdio.h>

int main() {
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    float heights[n];
    int i = 0;
    float height;

    while (i < n) {
        printf("Enter height of student %d (in ft): ", i + 1);
        scanf("%f", &height);

        if (height > 6.0) {
            printf("Height must not be greater than 6 ft. Please re-enter.\n");
        } else if (height < 5.5) {
            printf("Height must not be less than 5.5 ft. Please re-enter.\n");
        } else {
            heights[i] = height;
            i++;
        }
    }

    printf("Heights of all students:\n");
    for (int j = 0; j < n; j++) {
        printf("%.2f ft\n", heights[j]);
    }

    return 0;
}
------------------------------------------------------------------------------------------------
Program 7: 
